const { pool } = require('../config/database');

// Script pour r√©initialiser la base de donn√©es
async function reset() {
  const client = await pool.connect();
  
  try {
    console.log('üîÑ D√©but de la r√©initialisation PostgreSQL...');
    
    // Supprimer toutes les donn√©es dans l'ordre (pour respecter les contraintes de cl√©s √©trang√®res)
    await client.query('DELETE FROM remarks');
    await client.query('DELETE FROM sanctions');
    await client.query('DELETE FROM findings');
    await client.query('DELETE FROM documents');
    await client.query('DELETE FROM missions');
    await client.query('DELETE FROM users WHERE id != $1', ['admin-1']);
    
    console.log('‚úÖ Donn√©es supprim√©es');
    console.log('‚ÑπÔ∏è L\'administrateur principal a √©t√© conserv√©');
    
    // R√©ex√©cuter le seeding
    const { seed } = require('./seed');
    await seed();
    
    console.log('üéâ R√©initialisation PostgreSQL termin√©e avec succ√®s !');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la r√©initialisation:', error);
    throw error;
  } finally {
    client.release();
  }
}

// Ex√©cuter la r√©initialisation si le script est appel√© directement
if (require.main === module) {
  reset()
    .then(() => {
      console.log('‚úÖ R√©initialisation termin√©e');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Erreur de r√©initialisation:', error);
      process.exit(1);
    });
}

module.exports = { reset };
