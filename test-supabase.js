#!/usr/bin/env node

/**
 * Script de test pour la connexion Supabase
 * Usage: node test-supabase.js
 */

import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

// Charger les variables d'environnement
dotenv.config();

const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://zkjhbstofbthnitunzcf.supabase.co';
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inpramhic3RvZmJ0aG5pdHVuemNmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcwOTA0ODcsImV4cCI6MjA3MjY2NjQ4N30.OoFTGdwjXvA1hwcMsh_8WIQmNerBulCd7wCxRFTe21w';

async function testSupabaseConnection() {
  console.log('üîç Test de connexion √† Supabase...\n');
  
  try {
    // Cr√©er le client Supabase
    const supabase = createClient(supabaseUrl, supabaseAnonKey);
    console.log('‚úÖ Client Supabase cr√©√© avec succ√®s');
    
    // Test 1: V√©rifier la connexion
    console.log('\n1Ô∏è‚É£ Test de connexion...');
    const { data, error } = await supabase.from('users').select('count').limit(1);
    
    if (error) {
      console.log('‚ö†Ô∏è Erreur lors de la requ√™te:', error.message);
      console.log('üí° Cela peut √™tre normal si les tables n\'existent pas encore');
    } else {
      console.log('‚úÖ Connexion Supabase r√©ussie');
    }
    
    // Test 2: V√©rifier l'authentification
    console.log('\n2Ô∏è‚É£ Test d\'authentification...');
    const { data: authData, error: authError } = await supabase.auth.getSession();
    
    if (authError) {
      console.log('‚ö†Ô∏è Erreur d\'authentification:', authError.message);
    } else {
      console.log('‚úÖ Service d\'authentification accessible');
    }
    
    // Test 3: V√©rifier les informations du projet
    console.log('\n3Ô∏è‚É£ Informations du projet...');
    console.log(`   - URL: ${supabaseUrl}`);
    console.log(`   - Cl√©: ${supabaseAnonKey.substring(0, 20)}...`);
    
    console.log('\n‚úÖ Tests Supabase termin√©s avec succ√®s !');
    console.log('üéâ Votre configuration Supabase est op√©rationnelle');
    
    return true;
    
  } catch (error) {
    console.error('\n‚ùå Erreur lors des tests Supabase:', error.message);
    console.log('\nüîß Solutions possibles:');
    console.log('1. V√©rifiez votre connexion internet');
    console.log('2. V√©rifiez que l\'URL Supabase est correcte');
    console.log('3. V√©rifiez que la cl√© API est correcte');
    console.log('4. V√©rifiez que le projet Supabase existe et est actif');
    return false;
  }
}

// Ex√©cuter les tests
testSupabaseConnection();
